ggplot2::labs(
title = title,
subtitle = subtitle,
fill = legend_title,
x = axis_x_title,
y = axis_y_title
) +
ggplot2::theme(legend.position = "none");
ggplot2::ggplot(
data = plot_data,
ggplot2::aes(
y = category,
x = count,
fill = category)
) +
viridis::scale_fill_viridis(discrete = TRUE) +
ggplot2::geom_bar(
stat = "identity",
position = ggplot2::position_dodge(width = .75),
colour = "black"
) +
ggplot2::geom_text(
ggplot2::aes(label = label),
hjust = -0.5,
size = 3,
position = position_dodge(width = 1),
inherit.aes = TRUE
) +
ggplot2::xlim(x_lim_min, x_lim_max) +
ggplot2::theme(
panel.spacing = ggplot2::unit(c(.1,.1,.1,.1), "cm"),
plot.margin = ggplot2::unit(c(.1,.1,.1,.1), "cm")
) +
ggplot2::labs(
title = title,
subtitle = subtitle,
fill = legend_title,
x = axis_x_title,
y = axis_y_title
) +
ggplot2::theme(legend.position = "none");
data_plot
plot_data$category
factor(plot_data$category)
factor(plot_data$category)[4:1]
factor(plot_data$category)[1:4
]
factor(plot_data$category)[4:1]
as.character(factor(plot_data$category))[4:1]
as.character(factor(plot_data$category))[1:4]
plot_data
plot_data = prepare_data_barchart_with_single_column_coercion(
plot_data = iamperf2020_survey$Q14,
ordering_option = "level",
ordering_direction = -1);
plot_data
plot_object =
ggplot2::ggplot(
data = plot_data,
ggplot2::aes(
y = category,
x = count,
fill = category)
) +
viridis::scale_fill_viridis(discrete = TRUE) +
ggplot2::geom_bar(
stat = "identity",
position = ggplot2::position_dodge(width = .75),
colour = "black"
) +
ggplot2::geom_text(
ggplot2::aes(label = label),
hjust = -0.5,
size = 3,
position = position_dodge(width = 1),
inherit.aes = TRUE
) +
ggplot2::xlim(x_lim_min, x_lim_max) +
ggplot2::theme(
panel.spacing = ggplot2::unit(c(.1,.1,.1,.1), "cm"),
plot.margin = ggplot2::unit(c(.1,.1,.1,.1), "cm")
) +
ggplot2::labs(
title = title,
subtitle = subtitle,
fill = legend_title,
x = axis_x_title,
y = axis_y_title
) +
ggplot2::theme(legend.position = "none");
plot_object
plot_data = prepare_data_barchart_with_single_column_coercion(
plot_data = iamperf2020_survey$Q14,
ordering_option = "level",
ordering_direction = -1);
plot_data
plot_data = prepare_data_barchart_with_single_column_coercion(
plot_data = iamperf2020_survey$Q14,
ordering_option = "level",
#ordering_direction = -1
);
plot_data
as.vector(unlist(iamperf2020_survey$Q14))
prepare_data_barchart_with_single_column_coercion = function(
plot_data, # The data series
ordering_option = "count", # category | count | level
ordering_direction = 1 # 1 | -1
)
{
data_series_levels = levels(plot_data);
decreasing = ifelse(ordering_direction == 1, FALSE, TRUE);
plot_data = as.vector(unlist(plot_data)); # Coerce to a single vector.
plot_data = plot_data[!is.na(plot_data)]; # Remove NAs if applicable.
data_table = table(plot_data);
data_count_label = paste("(", data_table, ")", sep = "");
data_category = names(data_table);
data_frequency = prop.table(data_table);
data_frequency_label = paste(rounded_ratios_with_largest_remainder(data_frequency, digits = 1), "%");
data_label = paste(data_frequency_label, data_count_label, sep = " ");
data_count = as.vector(data_table);
data_frame = data.frame(
category = data_category,
count = data_count,
label = data_label
);
if(ordering_option == "category") {
data_frame = data_frame[order(data_frame$category, decreasing = decreasing),];
}
if(ordering_option == "count") {
data_frame = data_frame[order(data_frame$count, decreasing = decreasing),];
}
if(ordering_option == "level") {
data_frame$category = factor(
data_frame$category,
levels = data_series_levels,
ordered = TRUE
);
data_frame = dplyr::arrange(data_frame, category);
}
return(data_frame);
}
prepare_data_barchart_with_single_column_coercion(
plot_data = iamperf2020_survey$Q14,
ordering_option = "count",
ordering_direction = -1
);
prepare_data_barchart_with_single_column_coercion(
plot_data = iamperf2020_survey$Q14,
ordering_option = "count",
ordering_direction = 1
);
plot_data = prepare_data_barchart_with_single_column_coercion(
plot_data = iamperf2020_survey$Q14,
ordering_option = "count",
ordering_direction = 1
);
plot_object =
plot_barchart_gradients(
title = "Participant Relationship with Organization (Bar Chart)",
subtitle = "This bar chart shows the relationship of the participant with the organization selected to answer the questionnaire.\nThese are exclusive categories.",
axis_x_title = "Count of survey answers",
axis_y_title = "Relationship",
plot_data = plot_data[4:1,]
);
plot_object
plot_data
plot_data = prepare_data_barchart_with_single_column_coercion(
plot_data = iamperf2020_survey$Q14,
ordering_option = "count",
ordering_direction = -1
);
plot_object =
plot_barchart_gradients(
title = "Participant Relationship with Organization (Bar Chart)",
subtitle = "This bar chart shows the relationship of the participant with the organization selected to answer the questionnaire.\nThese are exclusive categories.",
axis_x_title = "Count of survey answers",
axis_y_title = "Relationship",
plot_data = plot_data[4:1,]
);
plot_object
plot_data$category
plot_data = prepare_data_barchart_with_single_column_coercion(
plot_data = iamperf2020_survey$Q14,
ordering_option = "count",
ordering_direction = -1
);
# Remove factor
plot_data$category = as.character(plot_data$category);
plot_object =
plot_barchart_gradients(
title = "Participant Relationship with Organization (Bar Chart)",
subtitle = "This bar chart shows the relationship of the participant with the organization selected to answer the questionnaire.\nThese are exclusive categories.",
axis_x_title = "Count of survey answers",
axis_y_title = "Relationship",
plot_data = plot_data[4:1,]
);
plot_object
plot_data
data.frame(plot_data)
?order
data.frame(plot_data$count)
order(plot_data$count, decreasing = TRUE)
plot_data$count
?sort
sort(plot_data$count, decreasing = TRUE, index.return = TRUE)$ix
plot_data = prepare_data_barchart_with_single_column_coercion(
plot_data = iamperf2020_survey$Q14,
ordering_option = "count",
ordering_direction = -1
);
# Remove factor
plot_data$category = as.character(plot_data$category);
plot_data = plot_data[sort(plot_data$count, decreasing = TRUE, index.return = TRUE)$ix,];
plot_data
plot_data = data.frame(plot_data[sort(plot_data$count, decreasing = TRUE, index.return = TRUE)$ix,]);
plot_data
View(plot_data)
plot_data = prepare_data_barchart_with_single_column_coercion(
plot_data = iamperf2020_survey$Q14,
ordering_option = "count",
ordering_direction = -1
);
plot_data
rownames(plot_data) = 1:4
plot_data
plot_barchart_gradients(
title = "Participant Relationship with Organization (Bar Chart)",
subtitle = "This bar chart shows the relationship of the participant with the organization selected to answer the questionnaire.\nThese are exclusive categories.",
axis_x_title = "Count of survey answers",
axis_y_title = "Relationship",
plot_data = plot_data[4:1,]
);
plot_data
plot_object =
plot_barchart_gradients(
title = "Participant Relationship with Organization (Bar Chart)",
subtitle = "This bar chart shows the relationship of the participant with the organization selected to answer the questionnaire.\nThese are exclusive categories.",
axis_x_title = "Count of survey answers",
axis_y_title = "Relationship",
plot_data = plot_data[4:1,]
);
plot_object
plot_object =
plot_barchart_gradients(
title = "Participant Relationship with Organization (Bar Chart)",
subtitle = "This bar chart shows the relationship of the participant with the organization selected to answer the questionnaire.\nThese are exclusive categories.",
axis_x_title = "Count of survey answers",
axis_y_title = "Relationship",
plot_data = plot_data
);
plot_object
plot_data = prepare_data_barchart_with_single_column_coercion(
plot_data = iamperf2020_survey$Q14,
ordering_option = "count",
ordering_direction = 1
);
plot_data
plot_object =
plot_barchart_gradients(
title = "Participant Relationship with Organization (Bar Chart)",
subtitle = "This bar chart shows the relationship of the participant with the organization selected to answer the questionnaire.\nThese are exclusive categories.",
axis_x_title = "Count of survey answers",
axis_y_title = "Relationship",
plot_data = plot_data
);
plot_object
plot_data
rownames(plot_data) = 1:4
plot_data
plot_barchart_gradients(
title = "Participant Relationship with Organization (Bar Chart)",
subtitle = "This bar chart shows the relationship of the participant with the organization selected to answer the questionnaire.\nThese are exclusive categories.",
axis_x_title = "Count of survey answers",
axis_y_title = "Relationship",
plot_data = plot_data
);
plot_data = prepare_data_barchart_with_single_column_coercion(
plot_data = iamperf2020_survey$Q14,
ordering_option = "count",
ordering_direction = 1
);
plot_data %>% rearrange(count)
plot_data %>% arrange(count)
plot_data %>% plyr::arrange(count)
plot_data = prepare_data_barchart_with_single_column_coercion(
plot_data = iamperf2020_survey$Q14,
ordering_option = "count",
ordering_direction = 1
);
# Remove factor
#plot_data$category = as.character(plot_data$category);
#plot_data = data.frame(plot_data[sort(plot_data$count, decreasing = TRUE, index.return = TRUE)$ix,]);
plot_data = plot_data %>% plyr::arrange(count);
plot_barchart_gradients(
title = "Participant Relationship with Organization (Bar Chart)",
subtitle = "This bar chart shows the relationship of the participant with the organization selected to answer the questionnaire.\nThese are exclusive categories.",
axis_x_title = "Count of survey answers",
axis_y_title = "Relationship",
plot_data = plot_data
);
plot_data
ggplot2::ggplot(
data = plot_data,
ggplot2::aes(
y = category,
x = count,
fill = category)
) +
viridis::scale_fill_viridis(discrete = TRUE) +
ggplot2::geom_bar(
#stat = "identity",
position = ggplot2::position_dodge(width = .75),
colour = "black"
) +
ggplot2::geom_text(
ggplot2::aes(label = label),
hjust = -0.5,
size = 3,
position = position_dodge(width = 1),
inherit.aes = TRUE
) +
ggplot2::xlim(x_lim_min, x_lim_max) +
ggplot2::theme(
panel.spacing = ggplot2::unit(c(.1,.1,.1,.1), "cm"),
plot.margin = ggplot2::unit(c(.1,.1,.1,.1), "cm")
) +
ggplot2::labs(
title = title,
subtitle = subtitle,
fill = legend_title,
x = axis_x_title,
y = axis_y_title
) +
ggplot2::theme(legend.position = "none");
ggplot2::ggplot(
data = plot_data,
ggplot2::aes(
y = category,
x = count,
fill = category)
) +
viridis::scale_fill_viridis(discrete = TRUE) +
ggplot2::geom_bar(
stat = "identity",
#position = ggplot2::position_dodge(width = .75),
colour = "black"
) +
ggplot2::geom_text(
ggplot2::aes(label = label),
hjust = -0.5,
size = 3,
position = position_dodge(width = 1),
inherit.aes = TRUE
) +
ggplot2::xlim(x_lim_min, x_lim_max) +
ggplot2::theme(
panel.spacing = ggplot2::unit(c(.1,.1,.1,.1), "cm"),
plot.margin = ggplot2::unit(c(.1,.1,.1,.1), "cm")
) +
ggplot2::labs(
title = title,
subtitle = subtitle,
fill = legend_title,
x = axis_x_title,
y = axis_y_title
) +
ggplot2::theme(legend.position = "none");
ggplot2::ggplot(
data = plot_data,
ggplot2::aes(
y = category,
x = count,
fill = category)
) +
viridis::scale_fill_viridis(discrete = TRUE) +
ggplot2::geom_bar(
stat = "identity",
#position = ggplot2::position_dodge(width = .75),
colour = "black"
)
ggplot2::ggplot(
data = plot_data,
ggplot2::aes(
y = category,
x = count,
fill = category)
) +
ggplot2::geom_bar(
stat = "identity",
#position = ggplot2::position_dodge(width = .75),
colour = "black"
)
plot_data
ggplot2::ggplot(
data = plot_data,
ggplot2::aes(
y = category,
x = reorder(count),
fill = category)
) +
ggplot2::geom_bar(
stat = "identity",
#position = ggplot2::position_dodge(width = .75),
colour = "black"
)
ggplot2::ggplot(
data = plot_data,
ggplot2::aes(
y = category,
x = count,
fill = category)
) +
ggplot2::geom_bar(
stat = "identity",
#position = ggplot2::position_dodge(width = .75),
colour = "black"
)
?reorder
plot_barchart_gradients = function(
title = NULL,
subtitle = NULL,
axis_x_title = NULL,
axis_y_title = NULL,
plot_data, # Pre-summarized data
legend_title = "Legend",
x_lim_min = NULL,
x_lim_max = NULL
){
# Returns a GGPlot2 barchart
# with gradient colors
# and bars ordered by factor levels.
x_lim_min = ifelse(
is.null(x_lim_min),
0,
x_lim_min);
x_lim_max = ifelse(
is.null(x_lim_max),
round(max(plot_data$count) * 1.1,0),
x_lim_max);
plot_object =
ggplot2::ggplot(
data = plot_data,
ggplot2::aes(
y = category,
x = count,
fill = category)
) +
ggplot2::geom_bar(
stat = "identity",
#position = ggplot2::position_dodge(width = .75),
colour = "black"
) +
viridis::scale_fill_viridis(discrete = TRUE) +
ggplot2::geom_text(
ggplot2::aes(label = label),
hjust = -0.5,
size = 3,
position = position_dodge(width = 1),
inherit.aes = TRUE
) +
ggplot2::xlim(x_lim_min, x_lim_max) +
ggplot2::theme(
panel.spacing = ggplot2::unit(c(.1,.1,.1,.1), "cm"),
plot.margin = ggplot2::unit(c(.1,.1,.1,.1), "cm")
) +
ggplot2::labs(
title = title,
subtitle = subtitle,
fill = legend_title,
x = axis_x_title,
y = axis_y_title
) +
ggplot2::theme(legend.position = "none");
return(plot_object);
}
plot_data = prepare_data_barchart_with_single_column_coercion(
plot_data = iamperf2020_survey$Q14,
ordering_option = "count",
ordering_direction = 1
);
# Remove factor
#plot_data$category = as.character(plot_data$category);
#plot_data = data.frame(plot_data[sort(plot_data$count, decreasing = TRUE, index.return = TRUE)$ix,]);
plot_data = plot_data %>% plyr::arrange(count);
plot_object =
plot_barchart_gradients(
title = "Participant Relationship with Organization (Bar Chart)",
subtitle = "This bar chart shows the relationship of the participant with the organization selected to answer the questionnaire.\nThese are exclusive categories.",
axis_x_title = "Count of survey answers",
axis_y_title = "Relationship",
plot_data = plot_data
);
plot_object;
?plyr::arrange
# Remove factor
#plot_data$category = as.character(plot_data$category);
#plot_data = data.frame(plot_data[sort(plot_data$count, decreasing = TRUE, index.return = TRUE)$ix,]);
plot_data = plot_data %>% plyr::arrange(desc(count));
# Remove factor
#plot_data$category = as.character(plot_data$category);
#plot_data = data.frame(plot_data[sort(plot_data$count, decreasing = TRUE, index.return = TRUE)$ix,]);
plot_data = plot_data %>% plyr::arrange(plyr::desc(count));
plot_object =
plot_barchart_gradients(
title = "Participant Relationship with Organization (Bar Chart)",
subtitle = "This bar chart shows the relationship of the participant with the organization selected to answer the questionnaire.\nThese are exclusive categories.",
axis_x_title = "Count of survey answers",
axis_y_title = "Relationship",
plot_data = plot_data
);
plot_object;
plot_data
